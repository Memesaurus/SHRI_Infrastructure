name: Node.js CI

on:
  pull_request:
  push:
    tags:
      - "v[0-9]*"

permissions:
  contents: read
  issues: write

jobs:
  unit_tests:
    strategy:
      matrix:
        node-version: [18.x]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: install deps
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install node dependencies
        run: npm ci

      - name: run build
        run: npm run build --if-present

      - name: run unit tests
        id: unit
        run: npm run test-ci
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: jest-report
          path: ./test-report.html
          retention-days: 30

  integration_tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: install deps
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install node dependencies
        run: npm ci

      - name: run build
        run: npm run build --if-present

      - name: install playwright browsers
        run: npx playwright install --with-deps

      - name: install xvfb
        run: sudo apt-get install xvfb

      - name: run integration
        run: xvfb-run -a --server-args="-screen 0 1024x768x24" npm run e2e
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30}

  set_badge_success:
    needs: [unit_tests, integration_tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && success()

    steps:
      - uses: actions/checkout@v3

      - name: set badge
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const script = require('.github/workflows/release/setBadge.js');
            await script({ github, context, TAG: "${{ github.ref_name }}", success: true });

  set_badge_failure:
    needs: [unit_tests, integration_tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && failure()

    steps:
      - uses: actions/checkout@v3

      - name: set badge
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const script = require('.github/workflows/release/setBadge.js');
            await script({ github, context, TAG: "${{ github.ref_name }}", success: false });
