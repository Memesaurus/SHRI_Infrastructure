name: release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  issues: write

jobs:
  create-issue:
    runs-on: ubuntu-latest

    steps:
      - name: create release issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const TAG = "${{ github.ref_name }}"

            const metaData = {
                owner: context.repo.owner,
                repo: context.repo.repo,
            }

            const getIssue = async () => {
                const issues = await github.rest.issues.listForRepo({...metaData, labels: "RELEASE"});
                console.log(issues);
                for (const issue of issues) {
                    if (issue.title === TAG) {
                        return issue;
                    }
                }
            }

            const getReleaseId = async () => {
                const releases = await github.rest.repos.listReleases(metaData);
                console.log(releases);
                for (const release of releases) {
                    if (release.tag_name === TAG) {
                        return release.id;
                    }
                }
            }

            const issue = getIssue();
            console.log(issue);
            const issueData = {
                ...metaData,
                title: TAG,
                labels: ['RELEASE'],
                issue_number: issue.number ?? null,
            };

            const releaseData = {
                ...metaData,
                tag_name: TAG,
                release_id: issue.number ? getReleaseId() : null, 
            }

            if (issue) {
                github.rest.issues.update(issueData);
                github.rest.repos.updateRelease(releaseData);
            } 
            else {
                github.rest.issues.create(issueData);
                github.rest.repos.createRelease(releaseData);
            }
